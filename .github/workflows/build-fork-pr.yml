---
name: build-fork-pr
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'main'
      platform:
        description: 'Platform to build'
        required: true
        type: choice
        default: 'android'
        options:
          - ios
          - android

  pull_request:
    types:
      - labeled

# Limit permissions of the GITHUB_TOKEN
permissions:
  contents: read
  pull-requests: write

env:
  NODE_VERSION: 22.14.0
  TERM: xterm
  IS_FORK: ${{ github.event.pull_request.head.repo.fork == true }}

jobs:
  test:
    runs-on: ubuntu-22.04
    if: ${{ (github.event.label.name == 'Build Apps for PR' || github.event.label.name == 'Build App for iOS' || github.event.label.name == 'Build App for Android' || (github.event_name == 'workflow_dispatch' && (github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'android'))) && github.event.pull_request.head.repo.fork == true }}
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: ci/test
        uses: ./.github/actions/test

  build-ios-fork-pr:
    runs-on: macos-14-large
    if: ${{ (github.event.label.name == 'Build Apps for PR' || github.event.label.name == 'Build App for iOS' || (github.event_name == 'workflow_dispatch' && github.event.inputs.platform == 'ios')) && github.event.pull_request.head.repo.fork == true }}
    needs:
      - test
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: ci/prepare-ios-build
        uses: ./.github/actions/prepare-ios-build

      - name: ci/setup-fork-ios-build
        run: |
          echo "Using debug code signing for fork build"
          echo "CODE_SIGN_IDENTITY=" >> $GITHUB_ENV
          echo "CODE_SIGNING_REQUIRED=NO" >> $GITHUB_ENV

      - name: ci/build-ios-fork-pr
        env:
          BRANCH_TO_BUILD: "${{ github.event.pull_request.head.ref }}"
          AWS_ACCESS_KEY_ID: "${{ secrets.FORK_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.FORK_AWS_SECRET_ACCESS_KEY }}"
          MATTERMOST_WEBHOOK_URL: "${{ secrets.FORK_MATTERMOST_WEBHOOK_URL }}"
        run: |
          # Modify fastlane to use debug signing
          sed -i '' 's/method = ENV\['\''IOS_BUILD_EXPORT_METHOD'\''\].nil? || ENV\['\''IOS_BUILD_EXPORT_METHOD'\''\].empty? ? '\''ad-hoc'\'' : ENV\['\''IOS_BUILD_EXPORT_METHOD'\''\]/method = '\''development'\''/' ./fastlane/Fastfile
          bundle exec fastlane ios build --env ios.pr
        working-directory: ./fastlane

      - name: ci/upload-ios-fork-pr-build
        id: ci-upload-ios-fork-pr-build
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ios-fork-build-pr-${{ github.run_id }}
          path: "*.ipa"

      - name: ci/post-artifact-link-to-pr
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const artifactId = '${{ steps.ci-upload-ios-fork-pr-build.outputs.artifact-id }}';
            if (!artifactId) {
              console.log('No iOS artifact ID found');
              return;
            }

            const artifactUrl = `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${artifactId}`;
            const message = `### iOS Fork PR Build\n\nThe iOS PR build from your forked repository is available for [download](${artifactUrl})\nCommit: ${{ github.event.pull_request.head.sha }}\n\n**Note:** This build is signed with debug credentials for testing purposes only.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

  build-android-fork-pr:
    runs-on: ubuntu-22.04
    if: ${{ (github.event.label.name == 'Build Apps for PR' || github.event.label.name == 'Build App for Android' || (github.event_name == 'workflow_dispatch' && github.event.inputs.platform == 'android')) && github.event.pull_request.head.repo.fork == true }}
    needs:
      - test
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: ci/prepare-android-build
        uses: ./.github/actions/prepare-android-build

      - name: ci/setup-fork-android-build
        run: |
          # Use debug keystore for signing
          echo "Using debug keystore for fork build"
          cp android/app/debug.keystore android/app/app.keystore
          echo "STORE_FILE=app.keystore" >> $GITHUB_ENV
          echo "STORE_PASSWORD=android" >> $GITHUB_ENV
          echo "KEY_ALIAS=androiddebugkey" >> $GITHUB_ENV
          echo "KEY_PASSWORD=android" >> $GITHUB_ENV

      - name: ci/build-android-fork-pr
        env:
          BRANCH_TO_BUILD: "${{ github.event.pull_request.head.ref }}"
          AWS_ACCESS_KEY_ID: "${{ secrets.FORK_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.FORK_AWS_SECRET_ACCESS_KEY }}"
          MATTERMOST_WEBHOOK_URL: "${{ secrets.FORK_MATTERMOST_WEBHOOK_URL }}"
        run: bundle exec fastlane android build --env android.pr
        working-directory: ./fastlane

      - name: ci/upload-android-fork-pr-build
        id: ci-upload-android-fork-pr-build
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: android-fork-build-pr-${{ github.run_id }}
          path: "*.apk"

      - name: ci/post-artifact-link-to-pr
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const artifactId = '${{ steps.ci-upload-android-fork-pr-build.outputs.artifact-id }}';
            if (!artifactId) {
              console.log('No Android artifact ID found');
              return;
            }

            const artifactUrl = `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${artifactId}`;
            const message = `### Android Fork PR Build\n\nThe Android PR build from your forked repository is available for [download](${artifactUrl})\nCommit: ${{ github.event.pull_request.head.sha }}\n\n**Note:** This build is signed with debug credentials for testing purposes only.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
