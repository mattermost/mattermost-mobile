// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/channel_list_row should show no results 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  ListFooterComponent={[Function]}
  contentContainerStyle={
    {
      "flexGrow": 1,
    }
  }
  data={[]}
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={15}
  keyExtractor={[Function]}
  keyboardDismissMode="on-drag"
  keyboardShouldPersistTaps="always"
  maxToRenderPerBatch={16}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={true}
  renderItem={[Function]}
  scrollEventThrottle={60}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
  testID="UserListRow.flat_list"
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          },
          {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "flexGrow": 1,
            "height": "100%",
            "justifyContent": "center",
            "paddingHorizontal": 32,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight="110"
          bbWidth="123"
          fill="none"
          focusable={false}
          height="110"
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "flex": 0,
                "height": 110,
                "width": 123,
              },
            ]
          }
          vbHeight={110}
          vbWidth={123}
          width="123"
        >
          <RNSVGGroup
            fill={null}
            propList={
              [
                "fill",
              ]
            }
          >
            <RNSVGGroup
              clipPath="clip0_4212_116720"
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGRect
                fill={
                  {
                    "payload": 4280047833,
                    "type": 0,
                  }
                }
                fillOpacity={0.12}
                height={31}
                propList={
                  [
                    "fill",
                    "fillOpacity",
                  ]
                }
                rx={3.75}
                width={107}
                x={0.255005}
                y={32}
              />
              <RNSVGRect
                fill={
                  {
                    "payload": 4280047833,
                    "type": 0,
                  }
                }
                fillOpacity={0.12}
                height={27}
                propList={
                  [
                    "fill",
                    "fillOpacity",
                  ]
                }
                rx={3.75}
                width={76}
                x={46.255}
                y={0}
              />
              <RNSVGRect
                fill={
                  {
                    "payload": 4280047833,
                    "type": 0,
                  }
                }
                fillOpacity={0.12}
                height={27}
                propList={
                  [
                    "fill",
                    "fillOpacity",
                  ]
                }
                rx={3.75}
                width={76}
                x={46.255}
                y={67}
              />
              <RNSVGPath
                d="M62.5814 6.60593C70.262 6.55738 77.3232 8.54646 83.755 12.5732C86.3956 14.2264 88.9301 16.223 91.3579 18.5631C94.3589 21.6787 96.7911 24.9905 98.653 28.5M62.5813 87.8542C53.6129 87.7863 45.4964 85.1063 38.255 79.7911C36.7377 78.6774 35.2587 77.4479 33.8185 76.1025C30.0784 72.0903 27.2249 67.8234 25.255 63.299M21.9572 47.2301C21.964 41.8688 22.9467 36.7921 24.9051 32C26.8843 27.1573 29.8599 22.6053 33.8322 18.3439M101.949 37C102.786 40.2642 103.206 43.6739 103.206 47.2301C103.2 51.5308 102.585 55.6211 101.358 59.5M100.495 32.5C100.769 33.1979 101.022 33.903 101.255 34.6153"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "stroke",
                    "strokeOpacity",
                  ]
                }
                stroke={
                  {
                    "payload": 4282336080,
                    "type": 0,
                  }
                }
                strokeOpacity={0.48}
              />
              <RNSVGPath
                d="M82.6551 5.72396C90.4991 9.4225 96.7179 14.8934 101.302 22.1318C103.184 25.1036 104.79 28.3733 106.12 31.9406"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "stroke",
                    "strokeOpacity",
                  ]
                }
                stroke={
                  {
                    "payload": 4282336080,
                    "type": 0,
                  }
                }
                strokeOpacity={0.48}
              />
              <RNSVGRect
                fill={
                  {
                    "payload": 4282336080,
                    "type": 0,
                  }
                }
                fillOpacity={0.48}
                height={7.45395}
                matrix={
                  [
                    0.7071067811865476,
                    0.7071067811865475,
                    -0.7071067811865475,
                    0.7071067811865476,
                    75.36651372019682,
                    -43.24765957207711,
                  ]
                }
                propList={
                  [
                    "fill",
                    "fillOpacity",
                  ]
                }
                rx={1}
                width={33.9752}
                x={89.8878}
                y={69.3516}
              />
              <RNSVGRect
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                height={6.45395}
                matrix={
                  [
                    0.7071067811865476,
                    0.7071067811865475,
                    -0.7071067811865475,
                    0.7071067811865476,
                    75.86650892517383,
                    -43.04055477705411,
                  ]
                }
                propList={
                  [
                    "stroke",
                    "strokeOpacity",
                  ]
                }
                rx={0.5}
                stroke={
                  {
                    "payload": 4282336080,
                    "type": 0,
                  }
                }
                strokeOpacity={0.8}
                width={32.9752}
                x={89.8878}
                y={70.0587}
              />
              <RNSVGPath
                d="M62.5706 11.2232C72.1732 11.1625 80.6832 14.6952 88.0764 21.8213C95.0689 29.0809 98.5773 37.5423 98.5773 47.2299C98.5652 56.9053 95.0689 65.3789 88.0764 72.6385C80.6832 79.7646 72.1975 83.2973 62.5706 83.2366C52.9559 83.1637 44.4459 79.7039 37.077 72.8206C30.0724 65.3061 26.5761 56.7839 26.564 47.2299C26.5761 37.6759 30.0845 29.1416 37.0892 21.627C44.4702 14.7559 52.968 11.2839 62.5706 11.2232Z"
                fill={
                  {
                    "payload": 4294967295,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "fill",
                  ]
                }
              />
              <RNSVGPath
                d="M62.5738 11.7232C72.0335 11.6634 80.418 15.1368 87.7227 22.1748C94.6257 29.3444 98.0773 37.6809 98.0773 47.2299C98.0652 56.7673 94.6251 65.1159 87.7228 72.2849C80.418 79.323 72.0576 82.7964 62.5738 82.7366C53.0959 82.6646 44.7093 79.2606 37.431 72.467C30.5135 65.0406 27.0759 56.6419 27.064 47.2294C27.0762 37.8176 30.5255 29.4072 37.4428 21.9809C44.7342 15.1984 53.109 11.783 62.5738 11.7232Z"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "stroke",
                    "strokeOpacity",
                  ]
                }
                stroke={
                  {
                    "payload": 4282336080,
                    "type": 0,
                  }
                }
                strokeOpacity={0.8}
              />
              <RNSVGPath
                clipRule={0}
                d="M88.076 21.8213C80.6829 14.6952 72.1729 11.1625 62.5703 11.2232C52.9677 11.2839 44.4698 14.7559 37.0888 21.627C30.0841 29.1416 26.5757 37.6759 26.5636 47.2299C26.5757 56.7839 30.072 65.3061 37.0767 72.8206C44.4455 79.7039 52.9555 83.1638 62.5703 83.2366C72.1971 83.2973 80.6829 79.7646 88.076 72.6385C95.0685 65.3789 98.5648 56.9053 98.577 47.2299C98.577 37.5423 95.0685 29.0809 88.076 21.8213ZM84.5637 25.3086C78.1852 19.1606 70.8432 16.1128 62.5586 16.1652C54.274 16.2175 46.9424 19.213 40.5745 25.1411C34.5312 31.6242 31.5043 38.9872 31.4939 47.2299C31.5043 55.4726 34.5207 62.8251 40.564 69.3083C46.9215 75.2468 54.2635 78.2318 62.5586 78.2947C70.8642 78.347 78.1852 75.2992 84.5637 69.1512C90.5965 62.888 93.6129 55.5774 93.6233 47.2299C93.6233 38.872 90.5965 31.5719 84.5637 25.3086Z"
                fill={
                  {
                    "payload": 4294967295,
                    "type": 0,
                  }
                }
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillRule",
                  ]
                }
              />
              <RNSVGPath
                clipRule={0}
                d="M88.076 21.8213C80.6828 14.6952 72.1728 11.1625 62.5702 11.2232C52.9676 11.2839 44.4697 14.7559 37.0887 21.627C30.0841 29.1416 26.5757 37.6759 26.5635 47.2299C26.5757 56.7839 30.0719 65.3061 37.0766 72.8206C44.4455 79.7039 52.9555 83.1638 62.5702 83.2366C72.1971 83.2973 80.6828 79.7646 88.076 72.6385C95.0685 65.3789 98.5648 56.9053 98.5769 47.2299C98.5769 37.5423 95.0685 29.0809 88.076 21.8213ZM84.5636 25.3086C78.1852 19.1606 70.8432 16.1128 62.5585 16.1652C54.2739 16.2175 46.9424 19.213 40.5744 25.1411C34.5312 31.6242 31.5043 38.9872 31.4938 47.2299C31.5043 55.4726 34.5207 62.8251 40.564 69.3083C46.9214 75.2468 54.2634 78.2318 62.5585 78.2947C70.8641 78.347 78.1852 75.2992 84.5636 69.1512C90.5964 62.888 93.6128 55.5774 93.6233 47.2299C93.6233 38.872 90.5964 31.5719 84.5636 25.3086Z"
                fill={
                  {
                    "payload": 4282336080,
                    "type": 0,
                  }
                }
                fillOpacity={0.8}
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillOpacity",
                    "fillRule",
                  ]
                }
              />
              <RNSVGPath
                d="M62.5736 11.7232C72.0333 11.6634 80.4179 15.1369 87.7225 22.1748C94.6255 29.3444 98.0771 37.681 98.0771 47.2299C98.065 56.7674 94.625 65.1159 87.7226 72.2849C80.4178 79.3231 72.0575 82.7964 62.5736 82.7366C53.0957 82.6647 44.7092 79.2607 37.4308 72.4671C30.5133 65.0407 27.0758 56.642 27.0638 47.2294C27.076 37.8176 30.5254 29.4072 37.4426 21.9809C44.734 15.1984 53.1088 11.783 62.5736 11.7232Z"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "stroke",
                    "strokeOpacity",
                  ]
                }
                stroke={
                  {
                    "payload": 4282336080,
                    "type": 0,
                  }
                }
                strokeOpacity={0.8}
              />
              <RNSVGCircle
                cx={51.255}
                cy={36}
                fill={
                  {
                    "payload": 4282336080,
                    "type": 0,
                  }
                }
                fillOpacity={0.32}
                propList={
                  [
                    "fill",
                    "fillOpacity",
                  ]
                }
                r={9}
              />
              <RNSVGPath
                d="M43.255 56H85.255"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "stroke",
                    "strokeOpacity",
                    "strokeLinecap",
                  ]
                }
                stroke={
                  {
                    "payload": 4282336080,
                    "type": 0,
                  }
                }
                strokeLinecap={1}
                strokeOpacity={0.8}
              />
              <RNSVGPath
                d="M43.255 63H65.255"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "stroke",
                    "strokeOpacity",
                    "strokeLinecap",
                  ]
                }
                stroke={
                  {
                    "payload": 4282336080,
                    "type": 0,
                  }
                }
                strokeLinecap={1}
                strokeOpacity={0.8}
              />
              <RNSVGPath
                d="M43.255 50H60.255"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "stroke",
                    "strokeOpacity",
                    "strokeLinecap",
                  ]
                }
                stroke={
                  {
                    "payload": 4282336080,
                    "type": 0,
                  }
                }
                strokeLinecap={1}
                strokeOpacity={0.8}
              />
              <RNSVGPath
                d="M65.255 50H80.255"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "stroke",
                    "strokeOpacity",
                    "strokeLinecap",
                  ]
                }
                stroke={
                  {
                    "payload": 4282336080,
                    "type": 0,
                  }
                }
                strokeLinecap={1}
                strokeOpacity={0.8}
              />
            </RNSVGGroup>
            <RNSVGDefs>
              <RNSVGClipPath
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                name="clip0_4212_116720"
              >
                <RNSVGRect
                  fill={
                    {
                      "payload": 4294967295,
                      "type": 0,
                    }
                  }
                  height={99}
                  propList={
                    [
                      "fill",
                    ]
                  }
                  width={122}
                  x={0.255005}
                  y={0}
                />
              </RNSVGClipPath>
            </RNSVGDefs>
          </RNSVGGroup>
        </RNSVGSvgView>
        <Text
          style={
            {
              "color": "#3f4350",
              "fontFamily": "Metropolis-SemiBold",
              "fontSize": 20,
              "fontWeight": "600",
              "lineHeight": 28,
              "marginTop": 32,
              "textAlign": "center",
            }
          }
        >
          No matches found for “some term”
        </Text>
        <Text
          style={
            {
              "color": "rgba(63,67,80,0.72)",
              "fontFamily": "OpenSans",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 24,
              "marginTop": 8,
            }
          }
        >
          Check the spelling or try another search.
        </Text>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <ActivityIndicator
          color="#1c58d9"
          size="large"
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`components/channel_list_row should show results and tutorial 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  ListFooterComponent={[Function]}
  contentContainerStyle={
    {
      "flexGrow": 1,
    }
  }
  data={
    [
      {
        "data": [
          {
            "auth_service": "",
            "create_at": 1111,
            "delete_at": 0,
            "email": "john@doe.com",
            "first_name": "",
            "id": "1",
            "last_name": "",
            "last_picture_update": 123456,
            "locale": "",
            "nickname": "",
            "notify_props": {
              "calls_desktop_sound": "true",
              "calls_mobile_notification_sound": "",
              "calls_mobile_sound": "",
              "calls_notification_sound": "Calm",
              "channel": "true",
              "comments": "never",
              "desktop": "mention",
              "desktop_sound": "true",
              "email": "true",
              "first_name": "true",
              "highlight_keys": "",
              "mention_keys": "",
              "push": "mention",
              "push_status": "away",
            },
            "position": "",
            "roles": "",
            "update_at": 1111,
            "username": "johndoe",
          },
        ],
        "first": true,
        "id": "J",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={15}
  keyExtractor={[Function]}
  keyboardDismissMode="on-drag"
  keyboardShouldPersistTaps="always"
  maxToRenderPerBatch={16}
  onContentSizeChange={[Function]}
  onEndReached={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={true}
  renderItem={[Function]}
  scrollEventThrottle={60}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
  testID="UserListRow.section_list"
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "backgroundColor": "#ffffff",
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "rgba(63,67,80,0.08)",
              "height": 24,
              "justifyContent": "center",
              "paddingLeft": 16,
            }
          }
        >
          <Text
            style={
              {
                "color": "#3f4350",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 12,
                "fontWeight": "600",
                "lineHeight": 16,
              }
            }
          >
            J
          </Text>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            [
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "paddingBottom": 8,
                  "paddingTop": 4,
                },
                {
                  "opacity": 1,
                  "paddingHorizontal": 20,
                },
                undefined,
              ],
              undefined,
            ]
          }
          testID="create_direct_message.user_list.user_item.1.1"
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                {
                  "height": 24,
                  "width": 24,
                },
                {
                  "marginRight": 12,
                },
              ]
            }
            testID="create_direct_message.user_list.user_item.1.1.profile_picture"
          >
            <ViewManagerAdapter_ExpoImage
              backgroundColor={4294967295}
              borderRadius={12}
              containerViewRef={"[React.ref]"}
              contentFit="cover"
              contentPosition={
                {
                  "left": "50%",
                  "top": "50%",
                }
              }
              height={24}
              nativeViewRef={"[React.ref]"}
              onError={[Function]}
              onLoad={[Function]}
              onLoadStart={[Function]}
              onProgress={[Function]}
              placeholder={[]}
              source={
                [
                  {
                    "uri": "https://community.mattermost.com/api/v4/users/1/image?_=123456",
                  },
                ]
              }
              style={
                {
                  "backgroundColor": "#ffffff",
                  "borderRadius": 12,
                  "height": 24,
                  "width": 24,
                }
              }
              transition={null}
              width={24}
            />
          </View>
          <View
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  {
                    "color": "#3f4350",
                    "flex": 0,
                    "flexShrink": 1,
                    "fontFamily": "OpenSans",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 24,
                  }
                }
                testID="create_direct_message.user_list.user_item.1.1.display_name"
              >
                johndoe
              </Text>
              <View
                style={
                  {
                    "flex": 1,
                  }
                }
              />
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "marginLeft": 12,
                  }
                }
              >
                <Icon
                  color="rgba(63,67,80,0.32)"
                  name="circle-outline"
                  size={28}
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onLayout={[Function]}
    >
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <ActivityIndicator
          color="#1c58d9"
          size="large"
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`components/channel_list_row should show results no tutorial 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  ListFooterComponent={[Function]}
  contentContainerStyle={
    {
      "flexGrow": 1,
    }
  }
  data={
    [
      {
        "data": [
          {
            "auth_service": "",
            "create_at": 1111,
            "delete_at": 0,
            "email": "john@doe.com",
            "first_name": "",
            "id": "1",
            "last_name": "",
            "last_picture_update": 123456,
            "locale": "",
            "nickname": "",
            "notify_props": {
              "calls_desktop_sound": "true",
              "calls_mobile_notification_sound": "",
              "calls_mobile_sound": "",
              "calls_notification_sound": "Calm",
              "channel": "true",
              "comments": "never",
              "desktop": "mention",
              "desktop_sound": "true",
              "email": "true",
              "first_name": "true",
              "highlight_keys": "",
              "mention_keys": "",
              "push": "mention",
              "push_status": "away",
            },
            "position": "",
            "roles": "",
            "update_at": 1111,
            "username": "johndoe",
          },
        ],
        "first": true,
        "id": "J",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={15}
  keyExtractor={[Function]}
  keyboardDismissMode="on-drag"
  keyboardShouldPersistTaps="always"
  maxToRenderPerBatch={16}
  onContentSizeChange={[Function]}
  onEndReached={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={true}
  renderItem={[Function]}
  scrollEventThrottle={60}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
  testID="UserListRow.section_list"
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "backgroundColor": "#ffffff",
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "rgba(63,67,80,0.08)",
              "height": 24,
              "justifyContent": "center",
              "paddingLeft": 16,
            }
          }
        >
          <Text
            style={
              {
                "color": "#3f4350",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 12,
                "fontWeight": "600",
                "lineHeight": 16,
              }
            }
          >
            J
          </Text>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            [
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "paddingBottom": 8,
                  "paddingTop": 4,
                },
                {
                  "opacity": 1,
                  "paddingHorizontal": 20,
                },
                undefined,
              ],
              undefined,
            ]
          }
          testID="create_direct_message.user_list.user_item.1.1"
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                {
                  "height": 24,
                  "width": 24,
                },
                {
                  "marginRight": 12,
                },
              ]
            }
            testID="create_direct_message.user_list.user_item.1.1.profile_picture"
          >
            <ViewManagerAdapter_ExpoImage
              backgroundColor={4294967295}
              borderRadius={12}
              containerViewRef={"[React.ref]"}
              contentFit="cover"
              contentPosition={
                {
                  "left": "50%",
                  "top": "50%",
                }
              }
              height={24}
              nativeViewRef={"[React.ref]"}
              onError={[Function]}
              onLoad={[Function]}
              onLoadStart={[Function]}
              onProgress={[Function]}
              placeholder={[]}
              source={
                [
                  {
                    "uri": "https://community.mattermost.com/api/v4/users/1/image?_=123456",
                  },
                ]
              }
              style={
                {
                  "backgroundColor": "#ffffff",
                  "borderRadius": 12,
                  "height": 24,
                  "width": 24,
                }
              }
              transition={null}
              width={24}
            />
          </View>
          <View
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  {
                    "color": "#3f4350",
                    "flex": 0,
                    "flexShrink": 1,
                    "fontFamily": "OpenSans",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 24,
                  }
                }
                testID="create_direct_message.user_list.user_item.1.1.display_name"
              >
                johndoe
              </Text>
              <View
                style={
                  {
                    "flex": 1,
                  }
                }
              />
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "marginLeft": 12,
                  }
                }
              >
                <Icon
                  color="rgba(63,67,80,0.32)"
                  name="circle-outline"
                  size={28}
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onLayout={[Function]}
    >
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <ActivityIndicator
          color="#1c58d9"
          size="large"
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`components/channel_list_row should show results no tutorial 2 users 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  ListFooterComponent={[Function]}
  contentContainerStyle={
    {
      "flexGrow": 1,
    }
  }
  data={
    [
      {
        "data": [
          {
            "auth_service": "",
            "create_at": 1111,
            "delete_at": 0,
            "email": "john@doe.com",
            "first_name": "",
            "id": "1",
            "last_name": "",
            "last_picture_update": 123456,
            "locale": "",
            "nickname": "",
            "notify_props": {
              "calls_desktop_sound": "true",
              "calls_mobile_notification_sound": "",
              "calls_mobile_sound": "",
              "calls_notification_sound": "Calm",
              "channel": "true",
              "comments": "never",
              "desktop": "mention",
              "desktop_sound": "true",
              "email": "true",
              "first_name": "true",
              "highlight_keys": "",
              "mention_keys": "",
              "push": "mention",
              "push_status": "away",
            },
            "position": "",
            "roles": "",
            "update_at": 1111,
            "username": "johndoe",
          },
        ],
        "first": true,
        "id": "J",
      },
      {
        "data": [
          {
            "auth_service": "",
            "create_at": 1111,
            "delete_at": 0,
            "email": "rocky@doe.com",
            "first_name": "",
            "id": "2",
            "last_name": "",
            "last_picture_update": 123456,
            "locale": "",
            "nickname": "",
            "notify_props": {
              "calls_desktop_sound": "true",
              "calls_mobile_notification_sound": "",
              "calls_mobile_sound": "",
              "calls_notification_sound": "Calm",
              "channel": "true",
              "comments": "never",
              "desktop": "mention",
              "desktop_sound": "true",
              "email": "true",
              "first_name": "true",
              "highlight_keys": "",
              "mention_keys": "",
              "push": "mention",
              "push_status": "away",
            },
            "position": "",
            "roles": "",
            "update_at": 1111,
            "username": "rocky",
          },
        ],
        "first": false,
        "id": "R",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={15}
  keyExtractor={[Function]}
  keyboardDismissMode="on-drag"
  keyboardShouldPersistTaps="always"
  maxToRenderPerBatch={16}
  onContentSizeChange={[Function]}
  onEndReached={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={true}
  renderItem={[Function]}
  scrollEventThrottle={60}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
  testID="UserListRow.section_list"
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "backgroundColor": "#ffffff",
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "rgba(63,67,80,0.08)",
              "height": 24,
              "justifyContent": "center",
              "paddingLeft": 16,
            }
          }
        >
          <Text
            style={
              {
                "color": "#3f4350",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 12,
                "fontWeight": "600",
                "lineHeight": 16,
              }
            }
          >
            J
          </Text>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            [
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "paddingBottom": 8,
                  "paddingTop": 4,
                },
                {
                  "opacity": 1,
                  "paddingHorizontal": 20,
                },
                undefined,
              ],
              undefined,
            ]
          }
          testID="create_direct_message.user_list.user_item.1.1"
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                {
                  "height": 24,
                  "width": 24,
                },
                {
                  "marginRight": 12,
                },
              ]
            }
            testID="create_direct_message.user_list.user_item.1.1.profile_picture"
          >
            <ViewManagerAdapter_ExpoImage
              backgroundColor={4294967295}
              borderRadius={12}
              containerViewRef={"[React.ref]"}
              contentFit="cover"
              contentPosition={
                {
                  "left": "50%",
                  "top": "50%",
                }
              }
              height={24}
              nativeViewRef={"[React.ref]"}
              onError={[Function]}
              onLoad={[Function]}
              onLoadStart={[Function]}
              onProgress={[Function]}
              placeholder={[]}
              source={
                [
                  {
                    "uri": "https://community.mattermost.com/api/v4/users/1/image?_=123456",
                  },
                ]
              }
              style={
                {
                  "backgroundColor": "#ffffff",
                  "borderRadius": 12,
                  "height": 24,
                  "width": 24,
                }
              }
              transition={null}
              width={24}
            />
          </View>
          <View
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  {
                    "color": "#3f4350",
                    "flex": 0,
                    "flexShrink": 1,
                    "fontFamily": "OpenSans",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 24,
                  }
                }
                testID="create_direct_message.user_list.user_item.1.1.display_name"
              >
                johndoe
              </Text>
              <View
                style={
                  {
                    "flex": 1,
                  }
                }
              />
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "marginLeft": 12,
                  }
                }
              >
                <Icon
                  color="rgba(63,67,80,0.32)"
                  name="circle-outline"
                  size={28}
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "backgroundColor": "#ffffff",
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "rgba(63,67,80,0.08)",
              "height": 24,
              "justifyContent": "center",
              "paddingLeft": 16,
            }
          }
        >
          <Text
            style={
              {
                "color": "#3f4350",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 12,
                "fontWeight": "600",
                "lineHeight": 16,
              }
            }
          >
            R
          </Text>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            [
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "paddingBottom": 8,
                  "paddingTop": 4,
                },
                {
                  "opacity": 1,
                  "paddingHorizontal": 20,
                },
                undefined,
              ],
              undefined,
            ]
          }
          testID="create_direct_message.user_list.user_item.2.2"
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                {
                  "height": 24,
                  "width": 24,
                },
                {
                  "marginRight": 12,
                },
              ]
            }
            testID="create_direct_message.user_list.user_item.2.2.profile_picture"
          >
            <ViewManagerAdapter_ExpoImage
              backgroundColor={4294967295}
              borderRadius={12}
              containerViewRef={"[React.ref]"}
              contentFit="cover"
              contentPosition={
                {
                  "left": "50%",
                  "top": "50%",
                }
              }
              height={24}
              nativeViewRef={"[React.ref]"}
              onError={[Function]}
              onLoad={[Function]}
              onLoadStart={[Function]}
              onProgress={[Function]}
              placeholder={[]}
              source={
                [
                  {
                    "uri": "https://community.mattermost.com/api/v4/users/2/image?_=123456",
                  },
                ]
              }
              style={
                {
                  "backgroundColor": "#ffffff",
                  "borderRadius": 12,
                  "height": 24,
                  "width": 24,
                }
              }
              transition={null}
              width={24}
            />
          </View>
          <View
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  {
                    "color": "#3f4350",
                    "flex": 0,
                    "flexShrink": 1,
                    "fontFamily": "OpenSans",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 24,
                  }
                }
                testID="create_direct_message.user_list.user_item.2.2.display_name"
              >
                rocky
              </Text>
              <View
                style={
                  {
                    "flex": 1,
                  }
                }
              />
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "marginLeft": 12,
                  }
                }
              >
                <Icon
                  color="rgba(63,67,80,0.32)"
                  name="circle-outline"
                  size={28}
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onLayout={[Function]}
    >
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <ActivityIndicator
          color="#1c58d9"
          size="large"
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;
